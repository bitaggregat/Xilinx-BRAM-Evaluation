`timescale 1ns / 1ps
//////////////////////////////////////////////////////////////////////////////////
// Company: 
// Engineer: 
// 
// Create Date: 07/08/2024 10:56:22 AM
// Design Name: 
// Module Name: bram_wrap
// Project Name: 
// Target Devices: 
// Tool Versions: 
// Description: 
// 
// Dependencies: 
// 
// Revision:
// Revision 0.01 - File Created
// Additional Comments:
// 
//////////////////////////////////////////////////////////////////////////////////


module lorem_ipsum(
    input clka,
    input [9:0] addra,
    output [35:0] douta
    );
    
    wire [31:0] data;
    wire [3:0] parity;
    
    assign douta = {parity, data};
    
RAMB36E1 #(
   // Address Collision Mode: "PERFORMANCE" or "DELAYED_WRITE"
   .RDADDR_COLLISION_HWCONFIG("DELAYED_WRITE"),
   // Collision check: Values ("ALL", "WARNING_ONLY", "GENERATE_X_ONLY" or "NONE")
   .SIM_COLLISION_CHECK("ALL"),
   // DOA_REG, DOB_REG: Optional output register (0 or 1)
   .DOA_REG(0),
   .DOB_REG(0),
   .EN_ECC_READ("FALSE"),                                                            // Enable ECC decoder,
                                                                                     // FALSE, TRUE
   .EN_ECC_WRITE("FALSE"),                                                           // Enable ECC encoder,
                                                                                     // FALSE, TRUE
   // INITP_00 to INITP_0F: Initial contents of the parity memory array
   .INITP_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
   .INITP_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
   .INITP_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
   .INITP_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
   .INITP_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
   .INITP_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
   .INITP_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
   .INITP_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
   .INITP_08(256'h0000000000000000000000000000000000000000000000000000000000000000),
   .INITP_09(256'h0000000000000000000000000000000000000000000000000000000000000000),
   .INITP_0A(256'h0000000000000000000000000000000000000000000000000000000000000000),
   .INITP_0B(256'h0000000000000000000000000000000000000000000000000000000000000000),
   .INITP_0C(256'h0000000000000000000000000000000000000000000000000000000000000000),
   .INITP_0D(256'h0000000000000000000000000000000000000000000000000000000000000000),
   .INITP_0E(256'h0000000000000000000000000000000000000000000000000000000000000000),
   .INITP_0F(256'h0000000000000000000000000000000000000000000000000000000000000000),
   // INIT_00 to INIT_7F: Initial contents of the data memory array
    .INIT_00(256'h646174636173736f72636164696361746e756f63636174756f6261656c626161),
	.INIT_01(256'h746661746e656d657369747265766461746e656d7473756a64616e6f69746964),
	.INIT_02(256'h6d6c616c6c61726961746e656d656572676174736e696167616e696167617265),
	.INIT_03(256'h61656c676e61646e61746e656d6573756d61746e756f6d61676e6f6d6174736f),
	.INIT_04(256'h61737574617261707061796e61746e61726577736e616c616d696e617972676e),
	.INIT_05(256'h61796d72616d7261746e656d75677261686372616c61766f72707061656c7070),
	.INIT_06(256'h727474616e6f69746e6574746174706d657474616b6361747461746173617472),
	.INIT_07(256'h0a420a656b617761636974616d6f747561797469726f687475616e6f69746361),
	.INIT_08(256'h736162646e61626c6c616265636e616c61626761626461626b63616279626162),
	.INIT_09(256'h75616365626c756669747561656265626874616274656b7361626e6973616265),
	.INIT_0A(256'h6c6c65626665696c6562726f69766168656265726f6665626565626465626573),
	.INIT_0B(256'h657469627469626874726962647269626e6565777465627972726562746e6562),
	.INIT_0C(256'h616f6265756c62776f6c62646f6f6c626564616c626b63616c62726574746962),
	.INIT_0D(256'h746f62746f6f626b6f6f62656e6f62676e696c696f6279646f6274616f626472),
	.INIT_0E(256'h7262737361726268636e617262656b6172626e69617262796f62786f62656c74),
	.INIT_0F(256'h6e656b6f72627468676972626567646972626b63697262687461657262646165),
	.INIT_10(256'h62676e69646c69756274656b63756268737572626e776f7262726568746f7262),
	.INIT_11(256'h7475627265747475627475627373656e6973756274737275626e727562626c75),
	.INIT_12(256'h65726163647261637361766e61636172656d6163656b61630a430a79626e6f74),
	.INIT_13(256'h6e696168636e6961747265636573756163746163747261636567616972726163),
	.INIT_14(256'h6d656863657365656863706165686365676e61686365636e6168636b6c616863),
	.INIT_15(256'h6c63656c637269636863727568636e696863666569686374736568636c616369),
	.INIT_16(256'h6374616f636c616f6364756f6c6368746f6c636b636f6c637261656c636e6165),
	.INIT_17(256'h6d6f6374726f666d6f63656d6f63626d6f63726f6c6f6372616c6c6f63646c6f),
	.INIT_18(256'h6d6f636e6f73697261706d6f63796e61706d6f636e6f6d6d6f6365657474696d),
	.INIT_19(256'h6e6f697469646e6f6378656c706d6f636574656c706d6f636e6f697469746570),
	.INIT_1A(256'h6f636b6f6f636c6f72746e6f6373756f6963736e6f636e6f697463656e6e6f63),
	.INIT_1B(256'h746e756f636867756f636e6f74746f636b726f6364726f6379706f6372657070),
	.INIT_1C(256'h636c65757263656d6972637469646572636b63617263776f637265766f637972),
	.INIT_1D(256'h73756365767275636e696174727563746e657272756370756379726368737572),
	.INIT_1E(256'h7468677561646b7261647265676e61646567616d61640a440a7475636e6f6968),
	.INIT_1F(256'h65646e6f69736963656474626564687461656472616564646165647961647265),
	.INIT_20(256'h646e6769736564746e65646e6570656465746163696c65646565726765647065),
	.INIT_21(256'h6e656d706f6c657665646c69617465646e6f6974637572747365646572697365),
	.INIT_22(256'h747269646e6f697463657269646e6f69747365676964746e6572656666696474),
	.INIT_23(256'h7567736964657361657369646e6f6973737563736964797265766f6373696479),
	.INIT_24(256'h6f646e6f6973697669646e6f6974756269727473696465636e61747369647473),
	.INIT_25(256'h73736572647265776172646e696172646e776f647462756f64726f6f64676f64),
	.INIT_26(256'h7261657261650a450a74737564797264706f7264676e69766972646b6e697264),
	.INIT_27(256'h67657463656666656e6f6974616375646565676465747361656874726165796c),
	.INIT_28(256'h656867756f6e65656e69676e65646e656369727463656c6563697473616c6567),
	.INIT_29(256'h706d617865797265766572657665746e6576656e657665726f7272656c617571),
	.INIT_2A(256'h657078656e6f69736e6170786565636e65747369786565676e6168637865656c),
	.INIT_2B(256'h61666c6c616674636166656361660a460a65796574726570786565636e656972),
	.INIT_2C(256'h616566726165667265687461667461666d726166726166796c696d616665736c),
	.INIT_2D(256'h6966656c6974726566656c616d6566676e696c656566656c6265656672656874),
	.INIT_2E(256'h69667473726966657269667265676e69667468676966646c6569666e6f697463),
	.INIT_2F(256'h66726f6f6c66746867696c6674616c66656d616c6667616c6664657869666873),
	.INIT_30(256'h6f66726f66746f6f666873696c6f6f66646f6f66646c6f66796c667265776f6c),
	.INIT_31(256'h6665657266656d6172666c776f6664726177726f666d726f666b726f66656372),
	.INIT_32(256'h666c6c75667469757266746e6f72666d6f7266646e65697266746e6575716572),
	.INIT_33(256'h657669676c7269677465676c6172656e65676e65647261670a470a6572757475),
	.INIT_34(256'h656d6e7265766f67646f6f67646c6f6774616f676f6765766f6c677373616c67),
	.INIT_35(256'h7267706972676e6565726774616572677961726773736172676e69617267746e),
	.INIT_36(256'h616872656d6d6168726961680a480a6e756765646975676874776f726770756f),
	.INIT_37(256'h68796e6f6d72616864726168726f627261687970706168676e69676e6168646e),
	.INIT_38(256'h6568676e69726165687968746c61656864616568656865766168657461687461),
	.INIT_39(256'h6f68656c6f6879726f747369686867696865726568706c656874616568747261),
	.INIT_3A(256'h756f686c61746970736f686573726f686e726f6865706f686b6f6f68776f6c6c),
	.INIT_3B(256'h6d696c6c69666961656469656369490a490a726f6d7568776f686573756f6872),
	.INIT_3C(256'h7972747375646e696573616572636e696e6965736c75706d69746e6174726f70),
	.INIT_3D(256'h65746e6965636e617275736e69746e656d757274736e69746365736e696b6e69),
	.INIT_3E(256'h6a796c6c656a0a4a0a646e616c73696e6f72696e6f69746e65766e6974736572),
	.INIT_3F(256'h6b7065656b0a4b0a706d756a656764756a79656e72756f6a6e696f6a6c657765),
	.INIT_40(256'h6f6e6b6566696e6b65656e6b7373696b646e696b6b63696b79656b656c747465),
	.INIT_41(256'h74616c7473616c65676175676e616c646e616c0a4c0a656764656c776f6e6b74),
	.INIT_42(256'h7265687461656c676e696e7261656c6661656c6461656c77616c686775616c65),
	.INIT_43(256'h7466696c7972617262696c6c6576656c72657474656c74656c67656c7466656c),
	.INIT_44(256'h64697571696c70696c6e656e696c656e696c74696d696c656b696c746867696c),
	.INIT_45(256'h6b636f6c676e6976696c29747361656c2c7373656c28656c7474696c7473696c),
	.INIT_46(256'h6d0a4d0a776f6c65766f6c64756f6c73736f6c65736f6f6c6b6f6f6c676e6f6c),
	.INIT_47(256'h6d6b72616d70616d726567616e616d6e616d656c616d656b616d656e69686361),
	.INIT_48(256'h79616d6c6169726574616d686374616d7373616d6465697272616d74656b7261),
	.INIT_49(256'h6d656d676e697465656d6c61636964656d7461656d6572757361656d6c61656d),
	.INIT_4A(256'h696d646e696d6b6c696d79726174696c696d656c6464696d6c6174656d79726f),
	.INIT_4B(256'h746e6f6d79656b6e6f6d79656e6f6d646578696d7473696d6574756e696d656e),
	.INIT_4C(256'h6e6961746e756f6d6e6f69746f6d726568746f6d676e696e726f6d6e6f6f6d68),
	.INIT_4D(256'h756d656c6373756d2974736f6d2c65726f6d286863756d65766f6d6874756f6d),
	.INIT_4E(256'h61727574616e6e6f6974616e776f7272616e656d616e6c69616e0a4e0a636973),
	.INIT_4F(256'h7672656e656c6465656e6465656e6b63656e79726173736563656e7261656e6c),
	.INIT_50(256'h726f6e6c616d726f6e6573696f6e6f6e746867696e7377656e77656e74656e65),
	.INIT_51(256'h6573626f0a4f0a74756e7265626d756e776f6e65746f6e746f6e65736f6e6874),
	.INIT_52(256'h6f6e6f646c6f6c696f65636966666f726566666f66666f666f6e6f6974617672),
	.INIT_53(256'h6f657469736f70706f6e6f696e69706f6e6f6974617265706f6e65706f796c6e),
	.INIT_54(256'h746e656d616e726f6e6f6974617a696e6167726f726564726f65676e61726f72),
	.INIT_55(256'h6e696170656761700a500a72656e776f7265766f6e65766f74756f726568746f),
	.INIT_56(256'h74736170747261706c65637261706c656c6c617261707265706170746e696170),
	.INIT_57(256'h6e6f737265706c69636e65706e65706563616570746e656d7961706574736170),
	.INIT_58(256'h6c706563616c70657069706e6970676970657275746369706c61636973796870),
	.INIT_59(256'h706572757361656c70657361656c7079616c706574616c70746e616c70656e61),
	.INIT_5A(256'h6974696c6f706873696c6f706e6f73696f70746e696f7074656b636f70776f6c),
	.INIT_5B(256'h746f70656c626973736f706e6f697469736f70726574726f70726f6f706c6163),
	.INIT_5C(256'h6972706563697270746e65736572707265776f70726564776f706f7461746f70),
	.INIT_5D(256'h7270737365636f7270656c6261626f7270657461766972706e6f73697270746e),
	.INIT_5E(256'h70747365746f727065736f727079747265706f72707469666f7270656375646f),
	.INIT_5F(256'h757065736f70727570746e656d6873696e7570706d75706c6c757063696c6275),
	.INIT_60(256'h656975716b636975716e6f6974736575717974696c6175710a510a7475706873),
	.INIT_61(256'h7961726574617274617265676e61726e6961726c6961720a520a657469757174),
	.INIT_62(256'h7069656365726e6f736165727964616572676e69646165726e6f697463616572),
	.INIT_63(256'h726e6f6974616c657272616c7567657274657267657264657264726f63657274),
	.INIT_64(256'h70736572747365757165726576697461746e657365727065726e6f6967696c65),
	.INIT_65(256'h69726d687479687264726177657274736572656c6269736e6f70736572746365),
	.INIT_66(256'h72666f6f726c6c6f72646f7264616f727265766972676e697274686769726563),
	.INIT_67(256'h61730a530a6e7572656c7572627572646e756f726867756f72746f6f726d6f6f),
	.INIT_68(256'h686373656c616373796173646e6173656d6173746c61736c6961736566617364),
	.INIT_69(256'h657374616573616573776572637373726f737369637365636e656963736c6f6f),
	.INIT_6A(256'h65736d65657364656573656573797261746572636573746572636573646e6f63),
	.INIT_6B(256'h69726573657461726170657365736e6573646e6573666c65736e6f697463656c),
	.INIT_6C(256'h72616873656d616873656b6168736564616873786573746e617672657373756f),
	.INIT_6D(256'h6f6873656f68736b636f6873747269687370696873666c656873706565687370),
	.INIT_6E(256'h6973656c706d69737265766c69736b6c69736e67697365646973747568737472),
	.INIT_6F(256'h6f6c7370696c737065656c73796b737472696b736e696b73657a697372657473),
	.INIT_70(256'h73656b6f6d73656c696d736c6c656d736873616d736c6c616d73776f6c736570),
	.INIT_71(256'h746569636f7370616f736f73776f6e73657a65656e73656b616e7368746f6f6d),
	.INIT_72(256'h756f7374726f73676e6f736e6f73656d6f7364696c6f7374666f736b636f7379),
	.INIT_73(256'h6e6f70736c616963657073656461707365636170736874756f7370756f73646e),
	.INIT_74(256'h617473706d6174736567617473657261757173676e697270736e6f6f70736567),
	.INIT_75(256'h6c656574736d616574736e6f6974617473746e656d6574617473747261747372),
	.INIT_76(256'h6974736c6c6974736666697473796b636974736b63697473706574736d657473),
	.INIT_77(256'h65726f7473706f7473656e6f74736863616d6f7473676e696b636f7473686374),
	.INIT_78(256'h63746572747374656572747365676e61727473746867696172747379726f7473),
	.INIT_79(256'h6475736863757365636e617473627573657275746375727473676e6f72747368),
	.INIT_7A(256'h6f707075736e757372656d6d75736e6f697473656767757372616775736e6564),
	.INIT_7B(256'h6c6261740a540a6d65747379736d697773746565777365736972707275737472),
	.INIT_7C(256'h6e69686361657478617465747361746c6c61746b6c6174656b61746c69617465),
	.INIT_7D(256'h6f6568746e656874656874746168746e6168747473657479636e65646e657467),
	.INIT_7E(256'h746867756f687473696874676e6968746e6968746b6369687465726568747972),
   // INIT_A, INIT_B: Initial values on output ports
   .INIT_A(36'h000000000),
   .INIT_B(36'h000000000),
   // Initialization File: RAM initialization file
   .INIT_FILE("NONE"),
   // RAM Mode: "SDP" or "TDP"
   .RAM_MODE("TDP"),
   // RAM_EXTENSION_A, RAM_EXTENSION_B: Selects cascade mode ("UPPER", "LOWER", or "NONE")
   .RAM_EXTENSION_A("NONE"),
   .RAM_EXTENSION_B("NONE"),
   // READ_WIDTH_A/B, WRITE_WIDTH_A/B: Read/write width per port
   .READ_WIDTH_A(36),                                                                 // 0-72
   .READ_WIDTH_B(0),                                                                 // 0-36
   .WRITE_WIDTH_A(0),                                                                // 0-36
   .WRITE_WIDTH_B(0),                                                                // 0-72
   // RSTREG_PRIORITY_A, RSTREG_PRIORITY_B: Reset or enable priority ("RSTREG" or "REGCE")
   .RSTREG_PRIORITY_A("RSTREG"),
   .RSTREG_PRIORITY_B("RSTREG"),
   // SRVAL_A, SRVAL_B: Set/reset value for output
   .SRVAL_A(36'h000000000),
   .SRVAL_B(36'h000000000),
   // Simulation Device: Must be set to "7SERIES" for simulation behavior
   .SIM_DEVICE("7SERIES"),
   // WriteMode: Value on output upon a write ("WRITE_FIRST", "READ_FIRST", or "NO_CHANGE")
   .WRITE_MODE_A("NO_CHANGE"),
   .WRITE_MODE_B("NO_CHANGE")
)
RAMB36E1_inst (
   // Cascade Signals: 1-bit (each) output: BRAM cascade ports (to create 64kx1)
   //.CASCADEOUTA(CASCADEOUTA),     // 1-bit output: A port cascade
   //.CASCADEOUTB(CASCADEOUTB),     // 1-bit output: B port cascade
   // ECC Signals: 1-bit (each) output: Error Correction Circuitry ports
   //.DBITERR(DBITERR),             // 1-bit output: Double bit error status
   //.ECCPARITY(ECCPARITY),         // 8-bit output: Generated error correction parity
   //.RDADDRECC(RDADDRECC),         // 9-bit output: ECC read address
   //.SBITERR(SBITERR),             // 1-bit output: Single bit error status
   // Port A Data: 32-bit (each) output: Port A data
   .DOADO(data),                 // 32-bit output: A port data/LSB data
   .DOPADOP(parity),             // 4-bit output: A port parity/LSB parity
   // Port B Data: 32-bit (each) output: Port B data
   //.DOBDO(DOBDO),                 // 32-bit output: B port data/MSB data
   //.DOPBDOP(DOPBDOP),             // 4-bit output: B port parity/MSB parity
   // Cascade Signals: 1-bit (each) input: BRAM cascade ports (to create 64kx1)
   //.CASCADEINA(CASCADEINA),       // 1-bit input: A port cascade
   //.CASCADEINB(CASCADEINB),       // 1-bit input: B port cascade
   // ECC Signals: 1-bit (each) input: Error Correction Circuitry ports
   //.INJECTDBITERR(INJECTDBITERR), // 1-bit input: Inject a double bit error
   //.INJECTSBITERR(INJECTSBITERR), // 1-bit input: Inject a single bit error
   // Port A Address/Control Signals: 16-bit (each) input: Port A address and control signals (read port
   // when RAM_MODE="SDP")
   .ADDRARDADDR({1'b0, addra[9:0], 5'b00000}),     // 16-bit input: A port address/Read address
   .CLKARDCLK(clka),         // 1-bit input: A port clock/Read clock
   .ENARDEN(1'b1)             // 1-bit input: A port enable/Read enable
   //.REGCEAREGCE(REGCEAREGCE),     // 1-bit input: A port register enable/Register enable
   //.RSTRAMARSTRAM(RSTRAMARSTRAM), // 1-bit input: A port set/reset
   //.RSTREGARSTREG(RSTREGARSTREG), // 1-bit input: A port register set/reset
   //.WEA(WEA),                     // 4-bit input: A port write enable
   // Port A Data: 32-bit (each) input: Port A data
   //.DIADI(DIADI),                 // 32-bit input: A port data/LSB data
   //.DIPADIP(DIPADIP)             // 4-bit input: A port parity/LSB parity
   // Port B Address/Control Signals: 16-bit (each) input: Port B address and control signals (write port
   // when RAM_MODE="SDP")
   //.ADDRBWRADDR(ADDRBWRADDR),     // 16-bit input: B port address/Write address
   //.CLKBWRCLK(CLKBWRCLK),         // 1-bit input: B port clock/Write clock
   //.ENBWREN(ENBWREN),             // 1-bit input: B port enable/Write enable
   //.REGCEB(REGCEB),               // 1-bit input: B port register enable
   //.RSTRAMB(RSTRAMB),             // 1-bit input: B port set/reset
   //.RSTREGB(RSTREGB),             // 1-bit input: B port register set/reset
   //.WEBWE(WEBWE),                 // 8-bit input: B port write enable/Write enable
   // Port B Data: 32-bit (each) input: Port B data
   //.DIBDI(DIBDI),                 // 32-bit input: B port data/MSB data
   //.DIPBDIP(DIPBDIP)              // 4-bit input: B port parity/MSB parity
);

// End of RAMB36E1_inst instantiation
    
endmodule
